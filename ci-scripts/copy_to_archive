#!/bin/bash
#
# Copyright (C) 2019 Luxoft Sweden AB
#
# Script to move all required artifacts into single directory
# Limitations: 
#   If ${IMAGE_DIR} contains more than one directory you will got
#   replica of every file in $ARCHIVE_DIR

if [ $# -ne 2 ]; then
    echo "Usage: $0 <build_dir> <archive_dir>"
    exit 1
fi

BUILD_DIR="$1"
ARCHIVE_DIR="$2"

IMAGE_DIR="${BUILD_DIR}/tmp/deploy/images"
SDK_DIR="${BUILD_DIR}/tmp/deploy/sdk"
LOG_DIR="${BUILD_DIR}/tmp/log"
LICENSE_DIR="${BUILD_DIR}/tmp/deploy/licenses"

QEMU_ARCH="qemux86-64"
JETSON_ARCH="jetson-tx2"

IMAGE_BASENAME="core-image-pelux"
SDK_BASENAME="pelux-glibc"

# Enable globstar option to recurse all the directories
shopt -s globstar

# If there is an QEMU directory
if [ -d ${IMAGE_DIR}/${QEMU_ARCH} ]; then
    echo "Archiving QEMU image to $ARCHIVE_DIR"
    mv ${IMAGE_DIR}/${QEMU_ARCH}/${IMAGE_BASENAME}-*.rootfs.ext4 $ARCHIVE_DIR
fi

# Copy the logs
if [ -d ${LOG_DIR}/isafw-logs ]; then
    echo "Archiving ISA FW logs to $ARCHIVE_DIR"
    mv ${LOG_DIR}/isafw-report_*/* $ARCHIVE_DIR
fi

if [ -f ${LOG_DIR}/cooker/**/console-latest.log ]; then
    shopt -u globstar;
    for n in $(find ${LOG_DIR}/cooker/** -type f -links 1);
    do
        TIMESTAMP=$(basename ${n})
        VARIANT=$(basename $(dirname ${n}))
        cp ${n} $ARCHIVE_DIR/console-${VARIANT}-${TIMESTAMP}
    done;
    shopt -s globstar;
fi

# Find the older directory
LICENSE_BUILD_DIR=$(ls -t ${LICENSE_DIR} | grep "${IMAGE_BASENAME}.*20.*" | tail -1)
# Copy license manifest file
if [ -f ${LICENSE_DIR}/${LICENSE_BUILD_DIR}/license.manifest ]; then
    echo "Archiving license manifest to $ARCHIVE_DIR"
    mv ${LICENSE_DIR}/${LICENSE_BUILD_DIR}/license.manifest $ARCHIVE_DIR/${LICENSE_BUILD_DIR}.license.manifest
fi

# Copy if image files exist
if [ -f ${IMAGE_DIR}/**/${IMAGE_BASENAME}-*rootfs.wic ]; then
    echo "Archiving rootfs.wic for ${IMAGE_BASENAME} to $ARCHIVE_DIR"
    mv ${IMAGE_DIR}/**/${IMAGE_BASENAME}-*rootfs.wic $ARCHIVE_DIR
fi

if [ -f ${IMAGE_DIR}/**/${IMAGE_BASENAME}-*rootfs.wic.bmap ]; then
    echo "Archiving rootfs.wic.bmap for ${IMAGE_BASENAME} to $ARCHIVE_DIR"
    mv ${IMAGE_DIR}/**/${IMAGE_BASENAME}-*rootfs.wic.bmap $ARCHIVE_DIR
fi

if [ -f ${IMAGE_DIR}/**/${IMAGE_BASENAME}-*rootfs.wic.bz2 ]; then
    echo "Archiving rootfs.wic.bz2 for ${IMAGE_BASENAME} to $ARCHIVE_DIR"
    mv ${IMAGE_DIR}/**/${IMAGE_BASENAME}-*rootfs.wic.bz2 $ARCHIVE_DIR
fi

if [ -f ${IMAGE_DIR}/**/${IMAGE_BASENAME}-*20*.swu ]; then
    echo "Archiving cpio/swu archive for ${IMAGE_BASENAME} to $ARCHIVE_DIR"
    mv ${IMAGE_DIR}/**/${IMAGE_BASENAME}-*20*.swu $ARCHIVE_DIR
fi

if [ -f ${IMAGE_DIR}/**/${IMAGE_BASENAME}-*rootfs.manifest ]; then
    echo "Archiving manifest for ${IMAGE_BASENAME} to $ARCHIVE_DIR"
    mv ${IMAGE_DIR}/**/${IMAGE_BASENAME}-*rootfs.manifest $ARCHIVE_DIR
fi

# If there is a Jetson TX2 directory
if [ -d ${IMAGE_DIR}/${JETSON_ARCH} ]; then
    echo "Archiving disk image package for ${IMAGE_BASENAME} to $ARCHIVE_DIR"
    mv ${IMAGE_DIR}/${JETSON_ARCH}/${IMAGE_BASENAME}-*20*.tegraflash.zip $ARCHIVE_DIR
fi

# Copy the SDK
if [ -d ${SDK_DIR} ]; then
    echo "Archiving SDK to $ARCHIVE_DIR"
    mv ${SDK_DIR}/${SDK_BASENAME}-*.sh $ARCHIVE_DIR
fi

# Disable globstar option
shopt -u globstar
